{"ast":null,"code":"var _jsxFileName = \"D:\\\\INFORMATICA\\\\ARCHIVOS_EXTRAIBLES\\\\MERN-Todo-App-main\\\\client\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTasks } from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useTasks();\n  const filteredTasks = state.tasks.filter(task => {\n    if (state.filter === \"active\") return !task.completed;\n    if (state.filter === \"completed\") return task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `todo-item ${task.completed ? \"completed\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"TOGGLE_TASK\",\n          payload: task.id\n        }),\n        children: task.completed ? \"Deshacer\" : \"Completar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"U7awREOi7ubUHHK7jlN8mVDS8NI=\", false, function () {\n  return [useTasks];\n});\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useTasks","jsxDEV","_jsxDEV","TodoList","_s","state","dispatch","filteredTasks","tasks","filter","task","completed","className","children","map","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","payload","id","_c","$RefreshReg$"],"sources":["D:/INFORMATICA/ARCHIVOS_EXTRAIBLES/MERN-Todo-App-main/client/src/components/TodoList.js"],"sourcesContent":["import React from \"react\";\r\nimport { useTasks } from \"./Dashboard\";\r\n\r\nexport default function TodoList() {\r\n  const { state, dispatch } = useTasks();\r\n\r\n  const filteredTasks = state.tasks.filter((task) => {\r\n    if (state.filter === \"active\") return !task.completed;\r\n    if (state.filter === \"completed\") return task.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {filteredTasks.map((task) => (\r\n        <div key={task.id} className={`todo-item ${task.completed ? \"completed\" : \"\"}`}>\r\n          <span>{task.title}</span>\r\n          <button\r\n            onClick={() =>\r\n              dispatch({ type: \"TOGGLE_TASK\", payload: task.id })\r\n            }\r\n          >\r\n            {task.completed ? \"Deshacer\" : \"Completar\"}\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAEtC,MAAMO,aAAa,GAAGF,KAAK,CAACG,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;IACjD,IAAIL,KAAK,CAACI,MAAM,KAAK,QAAQ,EAAE,OAAO,CAACC,IAAI,CAACC,SAAS;IACrD,IAAIN,KAAK,CAACI,MAAM,KAAK,WAAW,EAAE,OAAOC,IAAI,CAACC,SAAS;IACvD,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,oBACET,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBN,aAAa,CAACO,GAAG,CAAEJ,IAAI,iBACtBR,OAAA;MAAmBU,SAAS,EAAE,aAAaF,IAAI,CAACC,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;MAAAE,QAAA,gBAC7EX,OAAA;QAAAW,QAAA,EAAOH,IAAI,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzBjB,OAAA;QACEkB,OAAO,EAAEA,CAAA,KACPd,QAAQ,CAAC;UAAEe,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEZ,IAAI,CAACa;QAAG,CAAC,CACnD;QAAAV,QAAA,EAEAH,IAAI,CAACC,SAAS,GAAG,UAAU,GAAG;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA,GARDT,IAAI,CAACa,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CAzBuBD,QAAQ;EAAA,QACFH,QAAQ;AAAA;AAAAwB,EAAA,GADdrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}