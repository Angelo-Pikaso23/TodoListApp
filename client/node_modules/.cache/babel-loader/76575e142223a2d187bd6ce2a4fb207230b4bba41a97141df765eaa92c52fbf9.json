{"ast":null,"code":"var _jsxFileName = \"D:\\\\INFORMATICA\\\\ARCHIVOS_EXTRAIBLES\\\\MERN-Todo-App-main\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Login from './components/Login'; // Your Login component\nimport Registration from './components/Registration'; // Your Registration component\nimport Dashboard from './components/Dashboard'; // Your Dashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n  const [showRegistration, setShowRegistration] = useState(false); // State to track registration form visibility\n\n  const handleLogin = () => {\n    setIsLoggedIn(true); // Update state to indicate user is logged in\n  };\n  const toggleRegistration = () => {\n    setShowRegistration(!showRegistration); // Toggle registration form visibility\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: showRegistration ? /*#__PURE__*/_jsxDEV(Registration, {\n        toggleRegistration: toggleRegistration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        toggleRegistration: toggleRegistration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 116\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/dashboard\",\n      element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        toggleRegistration: toggleRegistration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"kisbEZCd0HUEyGa37vO2OxddM4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Login","Registration","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","showRegistration","setShowRegistration","handleLogin","toggleRegistration","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["D:/INFORMATICA/ARCHIVOS_EXTRAIBLES/MERN-Todo-App-main/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Login from './components/Login'; // Your Login component\r\nimport Registration from './components/Registration'; // Your Registration component\r\nimport Dashboard from './components/Dashboard'; // Your Dashboard component\r\n\r\nfunction App() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n    const [showRegistration, setShowRegistration] = useState(false); // State to track registration form visibility\r\n\r\n    const handleLogin = () => {\r\n        setIsLoggedIn(true); // Update state to indicate user is logged in\r\n    };\r\n\r\n    const toggleRegistration = () => {\r\n        setShowRegistration(!showRegistration); // Toggle registration form visibility\r\n    };\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={showRegistration ? <Registration toggleRegistration={toggleRegistration} /> : <Login onLogin={handleLogin} toggleRegistration={toggleRegistration} />} />\r\n            <Route path=\"/dashboard\" element={isLoggedIn ? <Dashboard /> : <Login onLogin={handleLogin} toggleRegistration={toggleRegistration} />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AACxC,OAAOC,YAAY,MAAM,2BAA2B,CAAC,CAAC;AACtD,OAAOC,SAAS,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjE,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtBH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC7BF,mBAAmB,CAAC,CAACD,gBAAgB,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACIL,OAAA,CAACN,MAAM;IAAAe,QAAA,gBACHT,OAAA,CAACL,KAAK;MAACe,IAAI,EAAC,GAAG;MAACC,OAAO,EAAEN,gBAAgB,gBAAGL,OAAA,CAACH,YAAY;QAACW,kBAAkB,EAAEA;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGf,OAAA,CAACJ,KAAK;QAACoB,OAAO,EAAET,WAAY;QAACC,kBAAkB,EAAEA;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClLf,OAAA,CAACL,KAAK;MAACe,IAAI,EAAC,YAAY;MAACC,OAAO,EAAER,UAAU,gBAAGH,OAAA,CAACF,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGf,OAAA,CAACJ,KAAK;QAACoB,OAAO,EAAET,WAAY;QAACC,kBAAkB,EAAEA;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtI,CAAC;AAEjB;AAACb,EAAA,CAlBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}